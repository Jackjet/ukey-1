package com.itrus.ukey.sql;

import com.itrus.ukey.db.DomainSur;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AppAuthLogExampleExt extends DomainSur {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public AppAuthLogExampleExt() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogAndSysUser(){
            addCriterion("aal.sys_user = su.id");
            return (Criteria) this;
        }

        public Criteria andAuthTimeIsNull() {
            addCriterion("aal.auth_time is null");
            return (Criteria) this;
        }

        public Criteria andAuthTimeIsNotNull() {
            addCriterion("aal.auth_time is not null");
            return (Criteria) this;
        }

        public Criteria andAuthTimeEqualTo(Date value) {
            addCriterion("aal.auth_time =", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeNotEqualTo(Date value) {
            addCriterion("aal.auth_time <>", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeGreaterThan(Date value) {
            addCriterion("aal.auth_time >", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("aal.auth_time >=", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeLessThan(Date value) {
            addCriterion("aal.auth_time <", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeLessThanOrEqualTo(Date value) {
            addCriterion("aal.auth_time <=", value, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeIn(List<Date> values) {
            addCriterion("aal.auth_time in", values, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeNotIn(List<Date> values) {
            addCriterion("aal.auth_time not in", values, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeBetween(Date value1, Date value2) {
            addCriterion("aal.auth_time between", value1, value2, "authTime");
            return (Criteria) this;
        }

        public Criteria andAuthTimeNotBetween(Date value1, Date value2) {
            addCriterion("aal.auth_time not between", value1, value2, "authTime");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseIsNull() {
            addCriterion("aal.has_b_license is null");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseIsNotNull() {
            addCriterion("aal.has_b_license is not null");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseEqualTo(Boolean value) {
            addCriterion("aal.has_b_license =", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseNotEqualTo(Boolean value) {
            addCriterion("aal.has_b_license <>", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseGreaterThan(Boolean value) {
            addCriterion("aal.has_b_license >", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_b_license >=", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseLessThan(Boolean value) {
            addCriterion("aal.has_b_license <", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseLessThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_b_license <=", value, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseIn(List<Boolean> values) {
            addCriterion("aal.has_b_license in", values, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseNotIn(List<Boolean> values) {
            addCriterion("aal.has_b_license not in", values, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_b_license between", value1, value2, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasBLicenseNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_b_license not between", value1, value2, "hasBLicense");
            return (Criteria) this;
        }

        public Criteria andHasLegalRIsNull() {
            addCriterion("aal.has_legal_r is null");
            return (Criteria) this;
        }

        public Criteria andHasLegalRIsNotNull() {
            addCriterion("aal.has_legal_r is not null");
            return (Criteria) this;
        }

        public Criteria andHasLegalREqualTo(Boolean value) {
            addCriterion("aal.has_legal_r =", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRNotEqualTo(Boolean value) {
            addCriterion("aal.has_legal_r <>", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRGreaterThan(Boolean value) {
            addCriterion("aal.has_legal_r >", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_legal_r >=", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRLessThan(Boolean value) {
            addCriterion("aal.has_legal_r <", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRLessThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_legal_r <=", value, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRIn(List<Boolean> values) {
            addCriterion("aal.has_legal_r in", values, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRNotIn(List<Boolean> values) {
            addCriterion("aal.has_legal_r not in", values, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_legal_r between", value1, value2, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasLegalRNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_legal_r not between", value1, value2, "hasLegalR");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeIsNull() {
            addCriterion("aal.has_org_code is null");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeIsNotNull() {
            addCriterion("aal.has_org_code is not null");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeEqualTo(Boolean value) {
            addCriterion("aal.has_org_code =", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeNotEqualTo(Boolean value) {
            addCriterion("aal.has_org_code <>", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeGreaterThan(Boolean value) {
            addCriterion("aal.has_org_code >", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_org_code >=", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeLessThan(Boolean value) {
            addCriterion("aal.has_org_code <", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeLessThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_org_code <=", value, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeIn(List<Boolean> values) {
            addCriterion("aal.has_org_code in", values, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeNotIn(List<Boolean> values) {
            addCriterion("aal.has_org_code not in", values, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_org_code between", value1, value2, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasOrgCodeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_org_code not between", value1, value2, "hasOrgCode");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertIsNull() {
            addCriterion("aal.has_tax_cert is null");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertIsNotNull() {
            addCriterion("aal.has_tax_cert is not null");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertEqualTo(Boolean value) {
            addCriterion("aal.has_tax_cert =", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertNotEqualTo(Boolean value) {
            addCriterion("aal.has_tax_cert <>", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertGreaterThan(Boolean value) {
            addCriterion("aal.has_tax_cert >", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_tax_cert >=", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertLessThan(Boolean value) {
            addCriterion("aal.has_tax_cert <", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertLessThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_tax_cert <=", value, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertIn(List<Boolean> values) {
            addCriterion("aal.has_tax_cert in", values, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertNotIn(List<Boolean> values) {
            addCriterion("aal.has_tax_cert not in", values, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_tax_cert between", value1, value2, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasTaxCertNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_tax_cert not between", value1, value2, "hasTaxCert");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoIsNull() {
            addCriterion("aal.has_user_info is null");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoIsNotNull() {
            addCriterion("aal.has_user_info is not null");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoEqualTo(Boolean value) {
            addCriterion("aal.has_user_info =", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoNotEqualTo(Boolean value) {
            addCriterion("aal.has_user_info <>", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoGreaterThan(Boolean value) {
            addCriterion("aal.has_user_info >", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_user_info >=", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoLessThan(Boolean value) {
            addCriterion("aal.has_user_info <", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoLessThanOrEqualTo(Boolean value) {
            addCriterion("aal.has_user_info <=", value, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoIn(List<Boolean> values) {
            addCriterion("aal.has_user_info in", values, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoNotIn(List<Boolean> values) {
            addCriterion("aal.has_user_info not in", values, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_user_info between", value1, value2, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andHasUserInfoNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aal.has_user_info not between", value1, value2, "hasUserInfo");
            return (Criteria) this;
        }

        public Criteria andAppIdIsNull() {
            addCriterion("aal.app_id is null");
            return (Criteria) this;
        }

        public Criteria andAppIdIsNotNull() {
            addCriterion("aal.app_id is not null");
            return (Criteria) this;
        }

        public Criteria andAppIdEqualTo(Long value) {
            addCriterion("aal.app_id =", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdNotEqualTo(Long value) {
            addCriterion("aal.app_id <>", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdGreaterThan(Long value) {
            addCriterion("aal.app_id >", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdGreaterThanOrEqualTo(Long value) {
            addCriterion("aal.app_id >=", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdLessThan(Long value) {
            addCriterion("aal.app_id <", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdLessThanOrEqualTo(Long value) {
            addCriterion("aal.app_id <=", value, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdIn(List<Long> values) {
            addCriterion("aal.app_id in", values, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdNotIn(List<Long> values) {
            addCriterion("aal.app_id not in", values, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdBetween(Long value1, Long value2) {
            addCriterion("aal.app_id between", value1, value2, "appId");
            return (Criteria) this;
        }

        public Criteria andAppIdNotBetween(Long value1, Long value2) {
            addCriterion("aal.app_id not between", value1, value2, "appId");
            return (Criteria) this;
        }
        public Criteria andEmailIsNull() {
            addCriterion("su.email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("su.email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("su.email =", value, "su.email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("su.email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("su.email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("su.email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("su.email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("su.email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("su.email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("su.email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("su.email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("su.email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("su.email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("su.email not between", value1, value2, "email");
            return (Criteria) this;
        }

    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table app_auth_log
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table app_auth_log
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}