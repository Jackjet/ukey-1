<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itrus.ukey.db.ActivityMsgTempMapper">
	<insert id="insertOrUpdate" parameterType="list">
		insert into activity_msg_temp(thread_id, cert_cn, create_time,
		host_id, key_sn, life_time, off_line_time,
		on_line_time, process_id,
		ukey_version, project,os_type)
		values
		<foreach collection="array" item="item" separator=",">
			(#{item.threadId,jdbcType=VARCHAR},#{item.certCn,jdbcType=VARCHAR},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.hostId,jdbcType=VARCHAR},#{item.keySn,jdbcType=VARCHAR},
			#{item.lifeTime,jdbcType=BIGINT},
			#{item.offLineTime,jdbcType=TIMESTAMP},#{item.onLineTime,jdbcType=TIMESTAMP},
			#{item.processId,jdbcType=VARCHAR},
			#{item.ukeyVersion,jdbcType=VARCHAR},
			#{item.project,jdbcType=BIGINT}, #{item.osType,jdbcType=VARCHAR})
		</foreach>
		ON DUPLICATE KEY UPDATE
		life_time=VALUES(life_time),
		off_line_time=VALUES(off_line_time)
	</insert>
	<insert id="insertIntoActivityMsg" parameterType="list">
		INSERT INTO
		activity_msg(id,thread_id, cert_cn, create_time,
		host_id,
		key_sn, life_time, off_line_time,
		on_line_time, process_id,
		ukey_version, project,os_type)
		values
		<foreach collection="array" item="item" separator=",">
			(#{item.id,jdbcType=BIGINT},#{item.threadId,jdbcType=VARCHAR},
			#{item.certCn,jdbcType=VARCHAR},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.hostId,jdbcType=VARCHAR},#{item.keySn,jdbcType=VARCHAR},
			#{item.lifeTime,jdbcType=BIGINT},
			#{item.offLineTime,jdbcType=TIMESTAMP},#{item.onLineTime,jdbcType=TIMESTAMP},
			#{item.processId,jdbcType=VARCHAR},
			#{item.ukeyVersion,jdbcType=VARCHAR},
			#{item.project,jdbcType=BIGINT}, #{item.osType,jdbcType=VARCHAR})
		</foreach>
		ON DUPLICATE KEY UPDATE
		life_time=VALUES(life_time),off_line_time=VALUES(off_line_time)
	</insert>
	<select id="selectActivityMsgByExamp" resultMap="BaseResultMap"
		parameterType="com.itrus.ukey.db.ActivityMsgTempExample">
		SELECT
		id,thread_id, cert_cn, create_time,
		host_id,
		key_sn, life_time, off_line_time,
		on_line_time, process_id,
		ukey_version, project,os_type
		FROM
		activity_msg_temp WHERE (SELECT
		MAX(id) FROM
		activity_msg)
		&lt;
		activity_msg_temp.id
	</select>
	<insert id="insertIntoSelectActivityMsg">
		INSERT INTO
		activity_msg(id,cert_cn,create_time,host_id,key_sn,life_time,off_line_time,on_line_time,process_id,thread_id,ukey_version,version,project,os_type)
		SELECT
		id,cert_cn,create_time,host_id,key_sn,life_time,off_line_time,on_line_time,process_id,thread_id,ukey_version,version,project,os_type
		FROM
		activity_msg_temp WHERE (SELECT
		MAX(id) FROM
		activity_msg)
		&lt;
		activity_msg_temp.id ON DUPLICATE KEY UPDATE
		activity_msg.life_time=VALUES(life_time),activity_msg.off_line_time=VALUES(off_line_time)
	</insert>
</mapper>