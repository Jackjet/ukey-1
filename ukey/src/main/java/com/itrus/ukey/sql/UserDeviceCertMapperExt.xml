<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itrus.ukey.sql.UdcDomainMapper" >
	<!-- 主身份信息 -->
  <resultMap type="com.itrus.ukey.sql.MasterDomain" id="masterRetMap" >
  	<result column="udc_id" jdbcType="BIGINT" property="udcId" />
    <result column="project" jdbcType="BIGINT" property="project" />
    <result column="cert_id" jdbcType="BIGINT" property="certId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
	<result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="user_cn" jdbcType="VARCHAR" property="userCn" />
    <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
	<result column="device_sn" jdbcType="VARCHAR" property="deviceSn" />
	<result column="model_num" jdbcType="VARCHAR" property="modelNum" />
  </resultMap>
  <!-- 设备管理信息 -->
  <resultMap id="udcResultMap" type="com.itrus.ukey.sql.UdcDomain" extends="masterRetMap" >
    <result column="cert_start_time" jdbcType="TIMESTAMP" property="certStartTime" />
	<result column="cert_end_time" jdbcType="TIMESTAMP" property="certEndTime" />
	<result column="cert_status" jdbcType="VARCHAR" property="certStatus" />
  </resultMap>
  <!-- pc端信任设备信息 -->
  <resultMap id="udcPCResultMap" type="com.itrus.ukey.sql.UdcPCDomain" >
    <result column="cert_start_time" jdbcType="TIMESTAMP" property="certStartTime" />
	<result column="cert_end_time" jdbcType="TIMESTAMP" property="certEndTime" />
	<result column="device_type" jdbcType="VARCHAR" property="deviceType" />
	<result column="model_num" jdbcType="VARCHAR" property="modelNum" />
	<result column="unique_str" jdbcType="VARCHAR" property="uniqueStr" />
  </resultMap>
  <resultMap id="CertResultMap" type="com.itrus.ukey.db.UserCert">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cert_dn" jdbcType="VARCHAR" property="certDn" />
    <result column="cert_end_time" jdbcType="TIMESTAMP" property="certEndTime" />
    <result column="cert_sn" jdbcType="VARCHAR" property="certSn" />
    <result column="cert_start_time" jdbcType="TIMESTAMP" property="certStartTime" />
    <result column="cert_status" jdbcType="VARCHAR" property="certStatus" />
    <result column="sha1_fingerprint" jdbcType="VARCHAR" property="sha1Fingerprint" />
    <result column="cert_buf" jdbcType="BIGINT" property="certBuf" />
    <result column="ra_account" jdbcType="BIGINT" property="raAccount" />
  </resultMap>
  <sql id="Example_Where_Clause_custom" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" prefixOverrides="and" suffix=")"  >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectUdcByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultMap="udcResultMap">
    select 
    	user_device_cert.id as udc_id,
    	itrus_user.id as user_id,
		itrus_user.project,
		itrus_user.user_cn,
		user_cert.id as cert_id,
		user_cert.cert_start_time,
		user_cert.cert_end_time,
		user_cert.cert_status,
		user_device.id as device_id,
		user_device.device_sn,
		user_device.model_num
	from 
		user_device_cert,
		user_cert,
		itrus_user,
		user_device
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_custom" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="offset != null and offset >= 0 and limit != null" >
        limit #{offset},#{limit}
      </when>
      <when test="offset == null and limit != null" >
        limit #{limit}
      </when>
    </choose>
  </select>
  <select id="countUdcByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultType="java.lang.Integer">
    select count(*) from user_device_cert,user_cert,itrus_user,user_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_custom" />
    </if>
  </select>
  <select id="selectCertByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultMap="CertResultMap">
  	select 
  		<if test="distinct">
      		distinct
    	</if>
  		user_cert.id, 
  		user_cert.cert_dn, 
  		user_cert.cert_start_time,
  		user_cert.cert_end_time, 
  		user_cert.cert_sn, 
  		user_cert.cert_status, 
  		user_cert.sha1_fingerprint,
  		user_cert.cert_buf, 
  		user_cert.ra_account
  	from 
  		user_device_cert,
		user_cert,
		itrus_user
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause_custom" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="offset != null and offset >= 0 and limit != null" >
        limit #{offset},#{limit}
      </when>
      <when test="offset == null and limit != null" >
        limit #{limit}
      </when>
    </choose>
  </select>
  <select id="countCertByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultType="java.lang.Integer">
    select 
    	count(*) 
    from 
    	user_device_cert,
		user_cert,
		itrus_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_custom" />
    </if>
  </select>
  <select id="selectUdcPCByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultMap="udcPCResultMap">
    select
    	CONCAT_WS('@', 
    		user_device_cert.id,
    		itrus_user.id, 
    		user_cert.id, 
    		user_device.id) as unique_str,
		user_cert.cert_start_time,
		user_cert.cert_end_time,
		user_device.device_type,
		user_device.model_num
	from 
		user_device_cert,
		user_cert,
		itrus_user,
		user_device
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_custom" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="offset != null and offset >= 0 and limit != null" >
        limit #{offset},#{limit}
      </when>
      <when test="offset == null and limit != null" >
        limit #{limit}
      </when>
    </choose>
  </select>

  <select id="selectMasterByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultMap="masterRetMap">
  	select 
		user_device_cert.id as udc_id,
		itrus_user.project,
		user_device_cert.user_cert as cert_id,
		itrus_user.id as user_id,
		user_device_cert.user_device as device_id,
		itrus_user.user_cn as user_cn,
		user_device.device_type,
		user_device.device_sn,
		user_device.model_num
	FROM
		itrus_user,
		user_device,
		user_device_cert
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause_custom" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="offset != null and offset >= 0 and limit != null" >
        limit #{offset},#{limit}
      </when>
      <when test="offset == null and limit != null" >
        limit #{limit}
      </when>
    </choose>
  </select>
   
  <select id="countMasterByExample" parameterType="com.itrus.ukey.sql.UdcDomainExample" resultType="java.lang.Integer">
	select 
    	count(*) 
    from 
    	itrus_user,
		user_device,
		user_device_cert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_custom" />
    </if>  	
  </select>
</mapper>