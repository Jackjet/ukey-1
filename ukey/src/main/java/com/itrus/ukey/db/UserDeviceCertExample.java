package com.itrus.ukey.db;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserDeviceCertExample extends DomainSur {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public UserDeviceCertExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return (Criteria) this;
		}

		public Criteria andIsMasterIsNull() {
			addCriterion("is_master is null");
			return (Criteria) this;
		}

		public Criteria andIsMasterIsNotNull() {
			addCriterion("is_master is not null");
			return (Criteria) this;
		}

		public Criteria andIsMasterEqualTo(Boolean value) {
			addCriterion("is_master =", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterNotEqualTo(Boolean value) {
			addCriterion("is_master <>", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterGreaterThan(Boolean value) {
			addCriterion("is_master >", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_master >=", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterLessThan(Boolean value) {
			addCriterion("is_master <", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterLessThanOrEqualTo(Boolean value) {
			addCriterion("is_master <=", value, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterIn(List<Boolean> values) {
			addCriterion("is_master in", values, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterNotIn(List<Boolean> values) {
			addCriterion("is_master not in", values, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterBetween(Boolean value1, Boolean value2) {
			addCriterion("is_master between", value1, value2, "isMaster");
			return (Criteria) this;
		}

		public Criteria andIsMasterNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_master not between", value1, value2, "isMaster");
			return (Criteria) this;
		}

		public Criteria andItrusUserIsNull() {
			addCriterion("itrus_user is null");
			return (Criteria) this;
		}

		public Criteria andItrusUserIsNotNull() {
			addCriterion("itrus_user is not null");
			return (Criteria) this;
		}

		public Criteria andItrusUserEqualTo(Long value) {
			addCriterion("itrus_user =", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserNotEqualTo(Long value) {
			addCriterion("itrus_user <>", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserGreaterThan(Long value) {
			addCriterion("itrus_user >", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserGreaterThanOrEqualTo(Long value) {
			addCriterion("itrus_user >=", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserLessThan(Long value) {
			addCriterion("itrus_user <", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserLessThanOrEqualTo(Long value) {
			addCriterion("itrus_user <=", value, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserIn(List<Long> values) {
			addCriterion("itrus_user in", values, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserNotIn(List<Long> values) {
			addCriterion("itrus_user not in", values, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserBetween(Long value1, Long value2) {
			addCriterion("itrus_user between", value1, value2, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andItrusUserNotBetween(Long value1, Long value2) {
			addCriterion("itrus_user not between", value1, value2, "itrusUser");
			return (Criteria) this;
		}

		public Criteria andUserCertIsNull() {
			addCriterion("user_cert is null");
			return (Criteria) this;
		}

		public Criteria andUserCertIsNotNull() {
			addCriterion("user_cert is not null");
			return (Criteria) this;
		}

		public Criteria andUserCertEqualTo(Long value) {
			addCriterion("user_cert =", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertNotEqualTo(Long value) {
			addCriterion("user_cert <>", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertGreaterThan(Long value) {
			addCriterion("user_cert >", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertGreaterThanOrEqualTo(Long value) {
			addCriterion("user_cert >=", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertLessThan(Long value) {
			addCriterion("user_cert <", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertLessThanOrEqualTo(Long value) {
			addCriterion("user_cert <=", value, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertIn(List<Long> values) {
			addCriterion("user_cert in", values, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertNotIn(List<Long> values) {
			addCriterion("user_cert not in", values, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertBetween(Long value1, Long value2) {
			addCriterion("user_cert between", value1, value2, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserCertNotBetween(Long value1, Long value2) {
			addCriterion("user_cert not between", value1, value2, "userCert");
			return (Criteria) this;
		}

		public Criteria andUserDeviceIsNull() {
			addCriterion("user_device is null");
			return (Criteria) this;
		}

		public Criteria andUserDeviceIsNotNull() {
			addCriterion("user_device is not null");
			return (Criteria) this;
		}

		public Criteria andUserDeviceEqualTo(Long value) {
			addCriterion("user_device =", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceNotEqualTo(Long value) {
			addCriterion("user_device <>", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceGreaterThan(Long value) {
			addCriterion("user_device >", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceGreaterThanOrEqualTo(Long value) {
			addCriterion("user_device >=", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceLessThan(Long value) {
			addCriterion("user_device <", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceLessThanOrEqualTo(Long value) {
			addCriterion("user_device <=", value, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceIn(List<Long> values) {
			addCriterion("user_device in", values, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceNotIn(List<Long> values) {
			addCriterion("user_device not in", values, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceBetween(Long value1, Long value2) {
			addCriterion("user_device between", value1, value2, "userDevice");
			return (Criteria) this;
		}

		public Criteria andUserDeviceNotBetween(Long value1, Long value2) {
			addCriterion("user_device not between", value1, value2,
					"userDevice");
			return (Criteria) this;
		}

		public Criteria andIsRevokedIsNull() {
			addCriterion("is_revoked is null");
			return (Criteria) this;
		}

		public Criteria andIsRevokedIsNotNull() {
			addCriterion("is_revoked is not null");
			return (Criteria) this;
		}

		public Criteria andIsRevokedEqualTo(Boolean value) {
			addCriterion("is_revoked =", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedNotEqualTo(Boolean value) {
			addCriterion("is_revoked <>", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedGreaterThan(Boolean value) {
			addCriterion("is_revoked >", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_revoked >=", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedLessThan(Boolean value) {
			addCriterion("is_revoked <", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedLessThanOrEqualTo(Boolean value) {
			addCriterion("is_revoked <=", value, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedIn(List<Boolean> values) {
			addCriterion("is_revoked in", values, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedNotIn(List<Boolean> values) {
			addCriterion("is_revoked not in", values, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedBetween(Boolean value1, Boolean value2) {
			addCriterion("is_revoked between", value1, value2, "isRevoked");
			return (Criteria) this;
		}

		public Criteria andIsRevokedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_revoked not between", value1, value2, "isRevoked");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user_device_cert
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_device_cert
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}