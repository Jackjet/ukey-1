<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itrus.ukey.db.AppGainEntityLogMapper" >
  <resultMap id="BaseResultMap" type="com.itrus.ukey.db.AppGainEntityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="gain_status" property="gainStatus" jdbcType="INTEGER" />
    <result column="unique_id" property="uniqueId" jdbcType="VARCHAR" />
    <result column="app_id" property="appId" jdbcType="BIGINT" />
    <result column="auth_log" property="authLog" jdbcType="BIGINT" />
    <result column="business_license" property="businessLicense" jdbcType="BIGINT" />
    <result column="entity_true" property="entityTrue" jdbcType="BIGINT" />
    <result column="id_card" property="idCard" jdbcType="BIGINT" />
    <result column="org_code" property="orgCode" jdbcType="BIGINT" />
    <result column="sys_user" property="sysUser" jdbcType="BIGINT" />
    <result column="tax_reg_cert" property="taxRegCert" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_time, gain_status, unique_id, app_id, auth_log, business_license, entity_true, 
    id_card, org_code, sys_user, tax_reg_cert
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itrus.ukey.db.AppGainEntityLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_gain_entity_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="offset != null and offset >= 0 and limit != null" >
        limit #{offset},#{limit}
      </when>
      <when test="offset == null and limit != null" >
        limit #{limit}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from app_gain_entity_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from app_gain_entity_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itrus.ukey.db.AppGainEntityLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from app_gain_entity_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itrus.ukey.db.AppGainEntityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_gain_entity_log (create_time, gain_status, unique_id, 
      app_id, auth_log, business_license, 
      entity_true, id_card, org_code, 
      sys_user, tax_reg_cert)
    values (#{createTime,jdbcType=TIMESTAMP}, #{gainStatus,jdbcType=INTEGER}, #{uniqueId,jdbcType=VARCHAR}, 
      #{appId,jdbcType=BIGINT}, #{authLog,jdbcType=BIGINT}, #{businessLicense,jdbcType=BIGINT}, 
      #{entityTrue,jdbcType=BIGINT}, #{idCard,jdbcType=BIGINT}, #{orgCode,jdbcType=BIGINT}, 
      #{sysUser,jdbcType=BIGINT}, #{taxRegCert,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.itrus.ukey.db.AppGainEntityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_gain_entity_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="gainStatus != null" >
        gain_status,
      </if>
      <if test="uniqueId != null" >
        unique_id,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="authLog != null" >
        auth_log,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="entityTrue != null" >
        entity_true,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="orgCode != null" >
        org_code,
      </if>
      <if test="sysUser != null" >
        sys_user,
      </if>
      <if test="taxRegCert != null" >
        tax_reg_cert,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gainStatus != null" >
        #{gainStatus,jdbcType=INTEGER},
      </if>
      <if test="uniqueId != null" >
        #{uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="authLog != null" >
        #{authLog,jdbcType=BIGINT},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=BIGINT},
      </if>
      <if test="entityTrue != null" >
        #{entityTrue,jdbcType=BIGINT},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=BIGINT},
      </if>
      <if test="sysUser != null" >
        #{sysUser,jdbcType=BIGINT},
      </if>
      <if test="taxRegCert != null" >
        #{taxRegCert,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itrus.ukey.db.AppGainEntityLogExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from app_gain_entity_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_gain_entity_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gainStatus != null" >
        gain_status = #{record.gainStatus,jdbcType=INTEGER},
      </if>
      <if test="record.uniqueId != null" >
        unique_id = #{record.uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null" >
        app_id = #{record.appId,jdbcType=BIGINT},
      </if>
      <if test="record.authLog != null" >
        auth_log = #{record.authLog,jdbcType=BIGINT},
      </if>
      <if test="record.businessLicense != null" >
        business_license = #{record.businessLicense,jdbcType=BIGINT},
      </if>
      <if test="record.entityTrue != null" >
        entity_true = #{record.entityTrue,jdbcType=BIGINT},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=BIGINT},
      </if>
      <if test="record.orgCode != null" >
        org_code = #{record.orgCode,jdbcType=BIGINT},
      </if>
      <if test="record.sysUser != null" >
        sys_user = #{record.sysUser,jdbcType=BIGINT},
      </if>
      <if test="record.taxRegCert != null" >
        tax_reg_cert = #{record.taxRegCert,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_gain_entity_log
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      gain_status = #{record.gainStatus,jdbcType=INTEGER},
      unique_id = #{record.uniqueId,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=BIGINT},
      auth_log = #{record.authLog,jdbcType=BIGINT},
      business_license = #{record.businessLicense,jdbcType=BIGINT},
      entity_true = #{record.entityTrue,jdbcType=BIGINT},
      id_card = #{record.idCard,jdbcType=BIGINT},
      org_code = #{record.orgCode,jdbcType=BIGINT},
      sys_user = #{record.sysUser,jdbcType=BIGINT},
      tax_reg_cert = #{record.taxRegCert,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itrus.ukey.db.AppGainEntityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_gain_entity_log
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gainStatus != null" >
        gain_status = #{gainStatus,jdbcType=INTEGER},
      </if>
      <if test="uniqueId != null" >
        unique_id = #{uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=BIGINT},
      </if>
      <if test="authLog != null" >
        auth_log = #{authLog,jdbcType=BIGINT},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=BIGINT},
      </if>
      <if test="entityTrue != null" >
        entity_true = #{entityTrue,jdbcType=BIGINT},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null" >
        org_code = #{orgCode,jdbcType=BIGINT},
      </if>
      <if test="sysUser != null" >
        sys_user = #{sysUser,jdbcType=BIGINT},
      </if>
      <if test="taxRegCert != null" >
        tax_reg_cert = #{taxRegCert,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itrus.ukey.db.AppGainEntityLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_gain_entity_log
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      gain_status = #{gainStatus,jdbcType=INTEGER},
      unique_id = #{uniqueId,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=BIGINT},
      auth_log = #{authLog,jdbcType=BIGINT},
      business_license = #{businessLicense,jdbcType=BIGINT},
      entity_true = #{entityTrue,jdbcType=BIGINT},
      id_card = #{idCard,jdbcType=BIGINT},
      org_code = #{orgCode,jdbcType=BIGINT},
      sys_user = #{sysUser,jdbcType=BIGINT},
      tax_reg_cert = #{taxRegCert,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>